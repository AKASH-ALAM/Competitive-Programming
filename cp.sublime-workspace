{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"oder",
				"order_of_key"
			],
			[
				"te",
				"testcase"
			],
			[
				"map",
				"unordered_map"
			],
			[
				"log",
				"log_a_to_base_b"
			],
			[
				"E",
				"EV_c"
			],
			[
				"cnt",
				"cnt_2"
			],
			[
				"in",
				"inc\t#include <â€¦>"
			],
			[
				"lo",
				"long"
			]
		]
	},
	"buffers":
	[
		{
			"file": "code.cpp",
			"settings":
			{
				"buffer_size": 993,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "in.txt",
			"settings":
			{
				"buffer_size": 5,
				"line_ending": "Unix"
			}
		},
		{
			"file": "out.txt",
			"settings":
			{
				"buffer_size": 6,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAc2RmamEKAAAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAc2RmamEKAAAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAc2RmamEKAAAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/cpp17.sublime-build",
					""
				]
			],
			[
				"Packages/User/cpp17.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/User/cpp20.sublime-build",
					""
				]
			],
			[
				"Packages/User/cpp20.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"th",
				"UI: Select Theme"
			],
			[
				"remoe",
				"Package Control: Remove Package"
			],
			[
				"them",
				"UI: Select Theme"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/akash/Programming/Competitive-Programming"
	],
	"file_history":
	[
		"/Users/akash/Programming/Competitive-Programming/out.txt",
		"/Users/akash/Programming/Competitive-Programming/in.txt",
		"/Users/akash/Programming/Competitive-Programming/Trick or Shortcut/Precompiled headers in C_C++.md",
		"/Users/akash/Programming/Competitive-Programming/code.cpp",
		"/Users/akash/Documents/Competitive-Programming/out.txt",
		"/Users/akash/Documents/Competitive-Programming/in.txt",
		"/Users/akash/Documents/Competitive-Programming/Data Structures/Graph/DSU.cpp",
		"/Users/akash/Documents/Competitive-Programming/code.cpp",
		"/Users/akash/Documents/Competitive-Programming/new.cpp",
		"/Users/akash/Documents/Competitive-Programming/Number Theory/bigmod.cpp",
		"/Users/akash/Documents/Competitive-Programming/grid.cpp",
		"/Users/akash/Documents/Competitive-Programming/Number Theory/sieve.cpp",
		"/Users/akash/Documents/Competitive-Programming/Bits Manipulation/subset_mask.cpp",
		"/Users/akash/Documents/Competitive-Programming/Data Structures/Tree/SegmentTree.cpp",
		"/Users/akash/Documents/Competitive-Programming/Number Theory/nCr.cpp",
		"/Users/akash/Documents/Competitive-Programming/String/substr.cpp",
		"/Users/akash/Documents/Competitive-Programming/Number Theory/nCr with MOD.cpp",
		"/Users/akash/Documents/Competitive-Programming/CPP17_Mac.json",
		"/Users/akash/Documents/Competitive-Programming/Hash/hash.cpp",
		"/Users/akash/Documents/Competitive-Programming/again.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/out.txt",
		"/Users/akash/Documents/Documents/Competitive-Programming/in.txt",
		"/Users/akash/Documents/Documents/Competitive-Programming/new.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/code.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/cf_template.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/Bits Manipulation/builtin_function.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/Trick or Shortcut/__int128.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/Number Theory/Linear Sieve.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/Number Theory/spf.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/Number Theory/PreCalculate_No_of_factors_1toN.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/Number Theory/PreCal_1toN_div.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/Bits Manipulation/Subset_of_submask.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/STL/Lambda_function.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/cp.sublime-workspace",
		"/Users/akash/Documents/Documents/Competitive-Programming/cp.sublime-project",
		"/Users/akash/Documents/Documents/Competitive-Programming/grid.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/Number Theory/sieve.cpp",
		"/Users/akash/Documents/Documents/Competitive-Programming/Data Structures/Graph/Shortest path printing.cpp",
		"/Users/akash/Documents/Competitive-Programming/cf_template.cpp",
		"/Users/akash/Documents/Competitive-Programming/template.sublime-snippet",
		"/Users/akash/Library/Application Support/Sublime Text/Packages/User/Ultimate_Template.sublime-snippet",
		"/Users/akash/Documents/Competitive-Programming/.gitignore",
		"/Users/akash/Documents/Competitive-Programming/Bits Manipulation/builtin_function.cpp",
		"/Users/akash/Library/Application Support/Sublime Text/Packages/User/clang_format.sublime-settings",
		"/Users/akash/Library/Application Support/Sublime Text/Packages/User/Preferences.sublime-settings",
		"/Users/akash/Library/Application Support/Sublime Text/Packages/Default/Preferences.sublime-settings",
		"/Users/akash/Library/Application Support/Sublime Text/Packages/User/cpp20.sublime-build",
		"/Users/akash/Library/Application Support/Sublime Text/Packages/User/cf.sublime-snippet"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": false
	},
	"folders":
	[
		{
			"path": "/Users/akash/Programming/Competitive-Programming"
		}
	],
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "code.cpp",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 993,
						"regions":
						{
						},
						"selection":
						[
							[
								855,
								855
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 105.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "in.txt",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 5,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 2,
					"file": "out.txt",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 35.0
	},
	"input":
	{
		"height": 45.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.764750042594,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 106.0,
		"history":
		[
		]
	},
	"output.find_results":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"dsu",
				"Data Structures/Graph/DSU.cpp"
			],
			[
				"",
				"Number Theory/bigmod.cpp"
			],
			[
				"big",
				"Number Theory/bigmod.cpp"
			],
			[
				"sei",
				"Number Theory/sieve.cpp"
			],
			[
				"bit",
				"Bits Manipulation/subset_mask.cpp"
			],
			[
				"bitmask",
				"Bits Manipulation/subset_mask.cpp"
			],
			[
				"sub",
				"String/substr.cpp"
			],
			[
				"seiv",
				"Number Theory/sieve.cpp"
			],
			[
				"ncr",
				"Number Theory/nCr.cpp"
			],
			[
				"seg",
				"Data Structures/Tree/SegmentTree.cpp"
			],
			[
				"se",
				"Data Structures/Tree/SegmentTree.cpp"
			],
			[
				"segme",
				"Data Structures/Tree/SegmentTree.cpp"
			],
			[
				"ha",
				"Hash/hash.cpp"
			],
			[
				"has",
				"Hash/hash.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 501.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		]
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 359.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
